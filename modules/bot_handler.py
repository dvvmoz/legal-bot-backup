"""
–ú–æ–¥—É–ª—å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π Telegram –±–æ—Ç–∞.
"""
import logging
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message, BotCommand
from aiogram.filters import Command
from aiogram.exceptions import TelegramAPIError
import config
import os
from .knowledge_base import search_relevant_docs, get_knowledge_base, should_use_dynamic_search
from .llm_service import get_answer
from .web_scraper import create_scraper_from_config
from .scraping_tracker import get_scraping_tracker
from .incremental_scraper import create_incremental_scraper
from .dynamic_search import create_dynamic_searcher
from .text_processing import TextProcessor
from .ml_question_filter import is_legal_question_ml as is_legal_question, get_ml_rejection_message as get_rejection_message
from .ml_analytics_integration import create_question_context, finalize_question_context, get_analytics_summary

logger = logging.getLogger(__name__)

# –ü–æ–ª—É—á–∞–µ–º –∞–¥—Ä–µ—Å –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é http://localhost:8080)
ADMIN_PANEL_URL = os.environ.get('ADMIN_PANEL_URL', 'http://localhost:8080')

class LegalBot:
    """–ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–º –±–æ—Ç–æ–º."""
    
    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±–æ—Ç–∞."""
        self.bot = Bot(token=config.TELEGRAM_TOKEN)
        self.dp = Dispatcher()
        self._setup_handlers()
        logger.info("–ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    def _setup_handlers(self):
        """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π."""
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
        self.dp.message.register(self.handle_start, Command("start"))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
        self.dp.message.register(self.handle_help, Command("help"))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stats
        self.dp.message.register(self.handle_stats, Command("stats"))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /scrape
        self.dp.message.register(self.handle_scrape, Command("scrape"))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /update –¥–ª—è –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞
        self.dp.message.register(self.handle_update, Command("update"))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /dynamic –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞
        self.dp.message.register(self.handle_dynamic, Command("dynamic"))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /admin –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
        self.dp.message.register(self.handle_admin, Command("admin"))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /analytics –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ ML-—Ñ–∏–ª—å—Ç—Ä–∞
        self.dp.message.register(self.handle_analytics, Command("analytics"))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /startadmin –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
        self.dp.message.register(self.handle_start_admin, Command("startadmin"))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stopadmin –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
        self.dp.message.register(self.handle_stop_admin, Command("stopadmin"))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –Ω–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥ —Å –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ–º (–¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
        self.dp.message.register(self.handle_deprecated_start_admin, Command("start_admin"))
        self.dp.message.register(self.handle_deprecated_stop_admin, Command("stop_admin"))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        self.dp.message.register(self.handle_question, F.text)
    
    async def _setup_bot_commands(self):
        """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –≤ Telegram."""
        commands = [
            BotCommand(command="start", description="–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º"),
            BotCommand(command="help", description="–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"),
            BotCommand(command="stats", description="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π"),
            BotCommand(command="admin", description="–í–µ–±-–ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"),
            BotCommand(command="analytics", description="–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ ML-—Ñ–∏–ª—å—Ç—Ä–∞"),
            BotCommand(command="startadmin", description="–ó–∞–ø—É—Å–∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏"),
            BotCommand(command="stopadmin", description="–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏"),
            BotCommand(command="scrape", description="–°–∫—Ä–∞–ø–∏–Ω–≥ —Å–∞–π—Ç–æ–≤"),
            BotCommand(command="update", description="–ò–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ"),
            BotCommand(command="dynamic", description="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞"),
        ]
        
        try:
            # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—ã
            await self.bot.set_my_commands(commands)
            logger.info("‚úÖ –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã:")
            for cmd in commands:
                logger.info(f"   /{cmd.command} - {cmd.description}")
        except TelegramAPIError as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞: {e}")
            # –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ –∫–æ–º–∞–Ω–¥
        except Exception as e:
            logger.error(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∫–æ–º–∞–Ω–¥: {e}")
    
    async def handle_start(self, message: Message):
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start.
        
        Args:
            message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        """
        welcome_text = """
ü§ñ **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Æ—Ä–ü–æ–º–æ—â–Ω–∏–∫ –†–ë!**

–Ø –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤—É –†–µ—Å–ø—É–±–ª–∏–∫–∏ –ë–µ–ª–∞—Ä—É—Å—å.

üáßüáæ **–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è:**
üìã –ë–µ–ª–æ—Ä—É—Å—Å–∫–æ–µ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ –∏ –ø—Ä–∞–≤–æ–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ
üìö –ö–æ–¥–µ–∫—Å—ã, –∑–∞–∫–æ–Ω—ã –∏ –ø–æ–¥–∑–∞–∫–æ–Ω–Ω—ã–µ –∞–∫—Ç—ã –†–ë
üìù –ü–æ—à–∞–≥–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –±–µ–ª–æ—Ä—É—Å—Å–∫–æ–º—É –ø—Ä–∞–≤—É
‚öñÔ∏è –ü—Ä–æ—Ü–µ–¥—É—Ä—ã –≤ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã—Ö –æ—Ä–≥–∞–Ω–∞—Ö –†–ë
üîç **–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫:** –ï—Å–ª–∏ –Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞ –≤ –±–∞–∑–µ, –∏—â—É –Ω–∞ pravo.by!

**–ß—Ç–æ —è –∑–Ω–∞—é:**
‚Ä¢ –ì—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–µ –ø—Ä–∞–≤–æ –†–ë
‚Ä¢ –¢—Ä—É–¥–æ–≤–æ–µ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ
‚Ä¢ –•–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø—Ä–∞–≤–æ
‚Ä¢ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã
‚Ä¢ –°–µ–º–µ–π–Ω–æ–µ –ø—Ä–∞–≤–æ
‚Ä¢ –ñ–∏–ª–∏—â–Ω–æ–µ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ

**–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:**
–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –æ–±—ã—á–Ω—ã–º —è–∑—ã–∫–æ–º.

**–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**
/help - —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
/stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π
/admin - –≤–µ–±-–ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)
/startadmin - –∑–∞–ø—É—Å–∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)
/stopadmin - –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)
/scrape - —Å–∫—Ä–∞–ø–∏–Ω–≥ —Å–∞–π—Ç–æ–≤ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)
/update - –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)
/dynamic - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)

‚ö†Ô∏è **–í–∞–∂–Ω–æ:** –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –æ—Å–Ω–æ–≤–∞–Ω—ã –Ω–∞ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–µ –†–ë. –ù–µ –∑–∞–º–µ–Ω—è—é—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é —é—Ä–∏–¥–∏—á–µ—Å–∫—É—é –ø–æ–º–æ—â—å.

–ó–∞–¥–∞–π—Ç–µ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å! üëá
"""
        try:
            await message.answer(welcome_text, parse_mode="Markdown")
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")
        except TelegramAPIError as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è: {e}")
    
    async def handle_help(self, message: Message):
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /help.
        
        Args:
            message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        """
        help_text = """
üìñ **–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –Æ—Ä–ü–æ–º–æ—â–Ω–∏–∫–∞ –†–ë**

üáßüáæ **–ü—Ä–∏–º–µ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ –±–µ–ª–æ—Ä—É—Å—Å–∫–æ–º—É –ø—Ä–∞–≤—É:**
‚Ä¢ "–ö–∞–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ò–ü –≤ –ë–µ–ª–∞—Ä—É—Å–∏?"
‚Ä¢ "–ö–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω—É–∂–Ω—ã –¥–ª—è —Ä–∞–∑–≤–æ–¥–∞ –≤ –†–ë?"
‚Ä¢ "–ö–∞–∫ –æ—Ñ–æ—Ä–º–∏—Ç—å —Ç—Ä—É–¥–æ–≤–æ–π –¥–æ–≥–æ–≤–æ—Ä –ø–æ –¢–ö –†–ë?"
‚Ä¢ "–ö–∞–∫–∏–µ –ø—Ä–∞–≤–∞ —É –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è –≤ –ë–µ–ª–∞—Ä—É—Å–∏?"
‚Ä¢ "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ?"
‚Ä¢ "–ß—Ç–æ –¥–µ–ª–∞—Ç—å –ø—Ä–∏ —É–≤–æ–ª—å–Ω–µ–Ω–∏–∏ –≤ –†–ë?"

**–°–æ–≤–µ—Ç—ã –¥–ª—è –ª—É—á—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:**
‚úÖ –§–æ—Ä–º—É–ª–∏—Ä—É–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ
‚úÖ –£–∫–∞–∑—ã–≤–∞–π—Ç–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç (–¥–ª—è –ò–ü, –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏, –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–∞)
‚úÖ –£—Ç–æ—á–Ω—è–π—Ç–µ —Ä–µ–≥–∏–æ–Ω (–ú–∏–Ω—Å–∫, –æ–±–ª–∞—Å—Ç–∏ –†–ë)
‚úÖ –ó–∞–¥–∞–≤–∞–π—Ç–µ –ø–æ –æ–¥–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É –∑–∞ —Ä–∞–∑

**–ß—Ç–æ —è –ù–ï –¥–µ–ª–∞—é:**
‚ùå –ù–µ –∑–∞–º–µ–Ω—è—é –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é —é—Ä–∏–¥–∏—á–µ—Å–∫—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é
‚ùå –ù–µ —Å–æ—Å—Ç–∞–≤–ª—è—é –¥–æ–∫—É–º–µ–Ω—Ç—ã
‚ùå –ù–µ –¥–∞—é —Å–æ–≤–µ—Ç—ã –ø–æ –Ω–µ–∑–∞–∫–æ–Ω–Ω—ã–º –¥–µ–π—Å—Ç–≤–∏—è–º
‚ùå –ù–µ –∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É—é –ø–æ —Ä–æ—Å—Å–∏–π—Å–∫–æ–º—É –ø—Ä–∞–≤—É

**–°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è:**
‚Ä¢ –ì—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–µ –ø—Ä–∞–≤–æ –†–ë (–ì–ö –†–ë)
‚Ä¢ –¢—Ä—É–¥–æ–≤–æ–µ –ø—Ä–∞–≤–æ (–¢–ö –†–ë)
‚Ä¢ –•–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø—Ä–∞–≤–æ (–•–ö –†–ë)
‚Ä¢ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–µ –ø—Ä–∞–≤–æ (–ö–æ–ê–ü –†–ë)
‚Ä¢ –°–µ–º–µ–π–Ω–æ–µ –ø—Ä–∞–≤–æ (–ö–æ–ë–° –†–ë)

**–ö–æ–º–∞–Ω–¥—ã:**
/start - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/help - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
/stats - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π
/admin - –≤–µ–±-–ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)
/startadmin - –∑–∞–ø—É—Å–∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)
/stopadmin - –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)
/scrape - —Å–∫—Ä–∞–ø–∏–Ω–≥ —Å–∞–π—Ç–æ–≤ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)
/update - –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)
/dynamic - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)

‚ùì –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –ø—Ä–æ—Å—Ç–æ —Å–ø—Ä–æ—Å–∏—Ç–µ!
"""
        try:
            await message.answer(help_text, parse_mode="Markdown")
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–ø—Ä–æ—Å–∏–ª —Å–ø—Ä–∞–≤–∫—É")
        except TelegramAPIError as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–ø—Ä–∞–≤–∫–∏: {e}")
    
    async def handle_stats(self, message: Message):
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /stats.
        
        Args:
            message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        """
        try:
            kb = get_knowledge_base()
            stats = kb.get_collection_stats()
            
            stats_text = f"""üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π

üìö –í—Å–µ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {stats.get('total_documents', 0)}
üóÇÔ∏è –ö–æ–ª–ª–µ–∫—Ü–∏—è: {stats.get('collection_name', 'N/A')}
üíæ –ü—É—Ç—å –∫ –ë–î: {stats.get('db_path', 'N/A')}

‚úÖ –ë–æ—Ç –≥–æ—Ç–æ–≤ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã!"""
            
            await message.answer(stats_text)
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–ø—Ä–æ—Å–∏–ª —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
            await message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É.")
    
    async def handle_scrape(self, message: Message):
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /scrape –¥–ª—è –≤–µ–±-—Å–∫—Ä–∞–ø–∏–Ω–≥–∞.
        
        Args:
            message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        """
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            admin_ids = config.ADMIN_IDS if config.ADMIN_IDS else [123456789]
            
            if message.from_user.id not in admin_ids:
                await message.answer("‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
                return
            
            # –ü–∞—Ä—Å–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã
            args = message.text.split()[1:]  # –£–±–∏—Ä–∞–µ–º /scrape
            
            if not args:
                help_text = """
üîç **–ö–æ–º–∞–Ω–¥–∞ —Å–∫—Ä–∞–ø–∏–Ω–≥–∞ —Å–∞–π—Ç–æ–≤**

**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:**
`/scrape <URL> [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_—Å—Ç—Ä–∞–Ω–∏—Ü]`

**–ü—Ä–∏–º–µ—Ä—ã:**
‚Ä¢ `/scrape https://www.garant.ru/ 10`
‚Ä¢ `/scrape https://www.consultant.ru/ 5`

**–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:**
‚Ä¢ URL - –∞–¥—Ä–µ—Å —Å–∞–π—Ç–∞ –¥–ª—è —Å–∫—Ä–∞–ø–∏–Ω–≥–∞
‚Ä¢ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_—Å—Ç—Ä–∞–Ω–∏—Ü - –º–∞–∫—Å–∏–º—É–º —Å—Ç—Ä–∞–Ω–∏—Ü (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 20)

‚ö†Ô∏è **–í–Ω–∏–º–∞–Ω–∏–µ:** –°–∫—Ä–∞–ø–∏–Ω–≥ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è!
"""
                await message.answer(help_text, parse_mode="Markdown")
                return
            
            url = args[0]
            max_pages = int(args[1]) if len(args) > 1 else 20
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å URL
            if not url.startswith(('http://', 'https://')):
                await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç URL. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–ª–Ω—ã–π –∞–¥—Ä–µ—Å —Å http:// –∏–ª–∏ https://")
                return
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ —Å–∫—Ä–∞–ø–∏–Ω–≥–∞
            status_msg = await message.answer(f"üöÄ –ù–∞—á–∏–Ω–∞—é —Å–∫—Ä–∞–ø–∏–Ω–≥ —Å–∞–π—Ç–∞: {url}\n‚è≥ –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç...")
            
            # –í—ã–ø–æ–ª–Ω—è–µ–º —Å–∫—Ä–∞–ø–∏–Ω–≥
            scraper = create_scraper_from_config()
            result = scraper.scrape_and_add(url, max_pages)
            
            if result['success']:
                success_text = f"""
‚úÖ **–°–∫—Ä–∞–ø–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!**

üìÑ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å—Ç—Ä–∞–Ω–∏—Ü: {result['pages_scraped']}
üìù –î–æ–±–∞–≤–ª–µ–Ω–æ —á–∞–Ω–∫–æ–≤: {result['chunks_added']}
üåê –°–∞–π—Ç: {result['start_url']}

–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –ø–æ–ø–æ–ª–Ω–µ–Ω–∞! –¢–µ–ø–µ—Ä—å –±–æ—Ç –∑–Ω–∞–µ—Ç –±–æ–ª—å—à–µ.
"""
                await status_msg.edit_text(success_text, parse_mode="Markdown")
            else:
                error_text = f"""
‚ùå **–û—à–∏–±–∫–∞ —Å–∫—Ä–∞–ø–∏–Ω–≥–∞**

üîç –°–∞–π—Ç: {url}
‚ö†Ô∏è –ü—Ä–∏—á–∏–Ω–∞: {result['message']}

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ:
‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–∞–π—Ç–∞
‚Ä¢ –£–º–µ–Ω—å—à–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü
‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–π URL
"""
                await status_msg.edit_text(error_text, parse_mode="Markdown")
            
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –≤—ã–ø–æ–ª–Ω–∏–ª —Å–∫—Ä–∞–ø–∏–Ω–≥ {url}")
            
        except ValueError:
            await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å—Ç—Ä–∞–Ω–∏—Ü. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —á–∏—Å–ª–æ.")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫—Ä–∞–ø–∏–Ω–≥–µ: {e}")
            await message.answer("üòî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫—Ä–∞–ø–∏–Ω–≥–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    
    async def handle_update(self, message: Message):
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /update –¥–ª—è –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞.
        
        Args:
            message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        """
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            admin_ids = config.ADMIN_IDS if config.ADMIN_IDS else [123456789]
            
            if message.from_user.id not in admin_ids:
                await message.answer("‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
                return
            
            # –ü–∞—Ä—Å–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã
            args = message.text.split()[1:]  # –£–±–∏—Ä–∞–µ–º /update
            
            if not args:
                help_text = """
üîÑ **–ö–æ–º–∞–Ω–¥–∞ –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è**

**–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:**
`/update <URL> [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_—Å—Ç—Ä–∞–Ω–∏—Ü]`

**–ü—Ä–∏–º–µ—Ä—ã:**
‚Ä¢ `/update https://pravo.by/ 50`
‚Ä¢ `/update https://www.consultant.ru/ 30`

**–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:**
‚Ä¢ URL - –∞–¥—Ä–µ—Å —Å–∞–π—Ç–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
‚Ä¢ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_—Å—Ç—Ä–∞–Ω–∏—Ü - –º–∞–∫—Å–∏–º—É–º —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 100)

**–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
‚úÖ –ü–∞—Ä—Å–∏—Ç —Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–µ –∏ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
‚úÖ –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ —Ö—ç—à–∞–º –∫–æ–Ω—Ç–µ–Ω—Ç–∞
‚úÖ –≠–∫–æ–Ω–æ–º–∏—Ç –≤—Ä–µ–º—è –∏ —Ä–µ—Å—É—Ä—Å—ã
‚úÖ –í–µ–¥–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏–π

‚ö†Ô∏è **–í–Ω–∏–º–∞–Ω–∏–µ:** –ü–µ—Ä–≤–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏!
"""
                await message.answer(help_text, parse_mode="Markdown")
                return
            
            url = args[0]
            max_pages = int(args[1]) if len(args) > 1 else 100
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å URL
            if not url.startswith(('http://', 'https://')):
                await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç URL. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–ª–Ω—ã–π –∞–¥—Ä–µ—Å —Å http:// –∏–ª–∏ https://")
                return
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            status_msg = await message.answer(f"üîÑ –ù–∞—á–∏–Ω–∞—é –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {url}\n‚è≥ –ü—Ä–æ–≤–µ—Ä—è—é –∏–∑–º–µ–Ω–µ–Ω–∏—è...")
            
            # –°–æ–∑–¥–∞–µ–º –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π —Å–∫—Ä–∞–ø–µ—Ä
            web_scraper = create_scraper_from_config()
            scraping_tracker = get_scraping_tracker()
            incremental_scraper = create_incremental_scraper(web_scraper, scraping_tracker)
            
            # –í—ã–ø–æ–ª–Ω—è–µ–º –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
            result = incremental_scraper.incremental_scrape(url, max_pages)
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
            if result['pages_scraped'] > 0:
                success_text = f"""
‚úÖ **–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!**

üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**
‚Ä¢ –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ URL: {result['total_urls_checked']}
‚Ä¢ –ù–æ–≤—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü: {result['new_pages']}
‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü: {result['changed_pages']}
‚Ä¢ –£–¥–∞–ª–µ–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü: {result['deleted_pages']}
‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å—Ç—Ä–∞–Ω–∏—Ü: {result['pages_scraped']}
‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–æ —á–∞–Ω–∫–æ–≤: {result['chunks_added']}

üåê **–°–∞–π—Ç:** {url}

–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω–∞! üéâ
"""
                await status_msg.edit_text(success_text, parse_mode="Markdown")
            else:
                no_changes_text = f"""
‚ÑπÔ∏è **–ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ**

üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**
‚Ä¢ –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ URL: {result['total_urls_checked']}
‚Ä¢ –ù–æ–≤—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü: {result['new_pages']}
‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü: {result['changed_pages']}
‚Ä¢ –£–¥–∞–ª–µ–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü: {result['deleted_pages']}

üåê **–°–∞–π—Ç:** {url}

–í—Å–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∞–∫—Ç—É–∞–ª—å–Ω—ã! ‚úÖ
"""
                await status_msg.edit_text(no_changes_text, parse_mode="Markdown")
            
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –≤—ã–ø–æ–ª–Ω–∏–ª –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ {url}")
            
        except ValueError:
            await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å—Ç—Ä–∞–Ω–∏—Ü. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —á–∏—Å–ª–æ.")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏: {e}")
            await message.answer("üòî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    
    async def handle_dynamic(self, message: Message):
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /dynamic –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞.
        
        Args:
            message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        """
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            admin_ids = config.ADMIN_IDS if config.ADMIN_IDS else [123456789]
            
            if message.from_user.id not in admin_ids:
                await message.answer("‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
                return
            
            # –°–æ–∑–¥–∞–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫–æ–≤–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
            web_scraper = create_scraper_from_config()
            knowledge_base = get_knowledge_base()
            text_processor = TextProcessor()
            scraping_tracker = get_scraping_tracker()
            
            dynamic_searcher = create_dynamic_searcher(
                web_scraper, knowledge_base, text_processor, scraping_tracker
            )
            
            stats = dynamic_searcher.get_search_statistics()
            
            stats_text = f"""
üîç **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞**

üåê **–ë–∞–∑–æ–≤—ã–π URL:** {stats['search_base_url']}
üìä **–ú–∞–∫—Å–∏–º—É–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:** {stats['max_search_results']}
üìÑ **–ú–∞–∫—Å–∏–º—É–º —Å—Ç—Ä–∞–Ω–∏—Ü –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç:** {stats['max_pages_per_result']}

üîó **–î–æ—Å—Ç—É–ø–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã:**
{chr(10).join(f"‚Ä¢ {endpoint}" for endpoint in stats['available_endpoints'])}

**–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:**
‚úÖ –ï—Å–ª–∏ –Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞ –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π, –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—â–µ—Ç –Ω–∞ pravo.by
‚úÖ –ù–∞–π–¥–µ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ –±–∞–∑—É –∑–Ω–∞–Ω–∏–π
‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∞–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
‚úÖ –°–ª–µ–¥—É—é—â–∏–µ –ø–æ—Ö–æ–∂–∏–µ –≤–æ–ø—Ä–æ—Å—ã –±—É–¥—É—Ç —Ä–µ—à–µ–Ω—ã –º–≥–Ω–æ–≤–µ–Ω–Ω–æ

**–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ç–µ–º—ã:**
‚Ä¢ –¢—Ä—É–¥–æ–≤–æ–µ –ø—Ä–∞–≤–æ ‚Ä¢ –ì—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–µ –ø—Ä–∞–≤–æ ‚Ä¢ –°–µ–º–µ–π–Ω–æ–µ –ø—Ä–∞–≤–æ
‚Ä¢ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–µ –ø—Ä–∞–≤–æ ‚Ä¢ –•–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø—Ä–∞–≤–æ ‚Ä¢ –ù–∞–ª–æ–≥–æ–≤–æ–µ –ø—Ä–∞–≤–æ
‚Ä¢ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ò–ü/–û–û–û ‚Ä¢ –î–æ–≥–æ–≤–æ—Ä—ã ‚Ä¢ –ù–∞—Å–ª–µ–¥—Å—Ç–≤–æ ‚Ä¢ –ê–ª–∏–º–µ–Ω—Ç—ã
‚Ä¢ –°—É–¥—ã ‚Ä¢ –®—Ç—Ä–∞—Ñ—ã ‚Ä¢ –ü—Ä–∞–≤–∞ –∏ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ –≥—Ä–∞–∂–¥–∞–Ω
"""
            
            await message.answer(stats_text, parse_mode="Markdown")
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–ø—Ä–æ—Å–∏–ª —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞: {e}")
            await message.answer("üòî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.")
    
    async def handle_admin(self, message: Message):
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /admin –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –≤–µ–±-–ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
        
        Args:
            message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        """
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            admin_ids = config.ADMIN_IDS if config.ADMIN_IDS else [123456789]
            
            # –í—Ä–µ–º–µ–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} (@{message.from_user.username}) –∑–∞–ø—Ä–æ—Å–∏–ª /admin")
            
            if message.from_user.id not in admin_ids:
                await message.answer(f"‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.\n\nüìù **–í–∞—à ID:** `{message.from_user.id}`\n\n–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –¥–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–π ID –≤ —Ñ–∞–π–ª .env:\n```\nADMIN_IDS={message.from_user.id}\n```", parse_mode="Markdown")
                return
            
            admin_text = """
üõ†Ô∏è **–í–µ–±-–ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Æ—Ä–ü–æ–º–æ—â–Ω–∏–∫–∞**

üåê <a href="{ADMIN_PANEL_URL}">–ê–¥—Ä–µ—Å –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏</a>

üîë **–î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:**
‚Ä¢ –õ–æ–≥–∏–Ω: `admin`
‚Ä¢ –ü–∞—Ä–æ–ª—å: `admin123`

‚ö†Ô∏è **–í–∞–∂–Ω–æ:** –ü–∞–Ω–µ–ª—å –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∑–∞–ø—É—â–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏!

**–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–∞–Ω–µ–ª–∏:**
üéõÔ∏è **–î–∞—à–±–æ—Ä–¥** - —Å–∏—Å—Ç–µ–º–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞** - –¥–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
üìã **–õ–æ–≥–∏** - –ø—Ä–æ—Å–º–æ—Ç—Ä —Ñ–∞–π–ª–æ–≤ –ª–æ–≥–æ–≤ (bot.log, scraping.log –∏ –¥—Ä.)
üîß **–ö–æ–º–∞–Ω–¥—ã** - –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
‚öôÔ∏è **–ü—Ä–æ—Ü–µ—Å—Å—ã** - –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
üìÅ **–î–æ–∫—É–º–µ–Ω—Ç—ã** - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑–æ–π –∑–Ω–∞–Ω–∏–π

**–ö–∞–∫ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø–∞–Ω–µ–ª—å:**
1. –û—Ç–∫—Ä–æ–π—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª –≤ –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞
2. –í—ã–ø–æ–ª–Ω–∏—Ç–µ: `python admin_panel.py`
3. –û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ: <a href="{ADMIN_PANEL_URL}">–ê–¥—Ä–µ—Å –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏</a>
4. –í–æ–π–¥–∏—Ç–µ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏

**–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫:**
‚Ä¢ Windows: `start_admin_panel.bat`
‚Ä¢ Linux/macOS: `./start_admin_panel.sh`

üîí **–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:** –°–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤ —Ñ–∞–π–ª–µ .env
"""
            
            await message.answer(admin_text.format(ADMIN_PANEL_URL=ADMIN_PANEL_URL), parse_mode="HTML")
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–ø—Ä–æ—Å–∏–ª –¥–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /admin: {e}")
            await message.answer("üòî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã.")
    
    async def handle_analytics(self, message: Message):
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /analytics –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ ML-—Ñ–∏–ª—å—Ç—Ä–∞.
        
        Args:
            message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        """
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            admin_ids = config.ADMIN_IDS if config.ADMIN_IDS else [123456789]
            
            if message.from_user.id not in admin_ids:
                await message.answer(f"‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.\n\nüìù **–í–∞—à ID:** `{message.from_user.id}`", parse_mode="Markdown")
                return
            
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
            analytics_summary = get_analytics_summary()
            
            await message.answer(analytics_summary, parse_mode="Markdown")
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–ø—Ä–æ—Å–∏–ª –∞–Ω–∞–ª–∏—Ç–∏–∫—É ML-—Ñ–∏–ª—å—Ç—Ä–∞")
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /analytics: {e}")
            await message.answer("üòî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.")
    
    async def handle_start_admin(self, message: Message):
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start_admin –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏.
        
        Args:
            message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        """
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            admin_ids = config.ADMIN_IDS if config.ADMIN_IDS else [123456789]
            
            # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} (@{message.from_user.username}) –∑–∞–ø—Ä–æ—Å–∏–ª /start_admin")
            
            if message.from_user.id not in admin_ids:
                await message.answer(f"‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.\n\nüìù **–í–∞—à ID:** `{message.from_user.id}`\n\n–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –¥–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–π ID –≤ —Ñ–∞–π–ª .env:\n```\nADMIN_IDS={message.from_user.id}\n```", parse_mode="Markdown")
                return
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ
            status_msg = await message.answer("üöÄ –ó–∞–ø—É—Å–∫–∞—é –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å...\n‚è≥ –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥...")
            
            try:
                import subprocess
                import sys
                import os
                
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –¥–ª—è –∑–∞–ø—É—Å–∫–∞
                python_cmd = sys.executable
                admin_panel_script = "admin_panel.py"
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞
                if not os.path.exists(admin_panel_script):
                    await status_msg.edit_text("‚ùå –§–∞–π–ª admin_panel.py –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏!")
                    return
                
                # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
                if os.name == 'nt':  # Windows
                    # –î–ª—è Windows –∏—Å–ø–æ–ª—å–∑—É–µ–º CREATE_NEW_CONSOLE —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ
                    process = subprocess.Popen(
                        [python_cmd, admin_panel_script],
                        creationflags=subprocess.CREATE_NEW_CONSOLE,
                        cwd=os.getcwd()
                    )
                else:  # Linux/macOS
                    # –î–ª—è Unix-—Å–∏—Å—Ç–µ–º –∑–∞–ø—É—Å–∫–∞–µ–º –≤ —Ñ–æ–Ω–µ
                    process = subprocess.Popen(
                        [python_cmd, admin_panel_script],
                        stdout=subprocess.DEVNULL,
                        stderr=subprocess.DEVNULL,
                        start_new_session=True
                    )
                
                # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ —á—Ç–æ–±—ã –ø—Ä–æ—Ü–µ—Å—Å —É—Å–ø–µ–ª –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
                import asyncio
                await asyncio.sleep(3)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—Å—Ç–∏–ª—Å—è
                if process.poll() is None:  # –ü—Ä–æ—Ü–µ—Å—Å –µ—â–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
                    success_text = f"""
‚úÖ **–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞!**

üåê **–ê–¥—Ä–µ—Å:** <a href="{ADMIN_PANEL_URL}">–ê–¥—Ä–µ—Å –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏</a>
üîë **–õ–æ–≥–∏–Ω:** admin
üîë **–ü–∞—Ä–æ–ª—å:** admin123

üìù **PID –ø—Ä–æ—Ü–µ—Å—Å–∞:** {process.pid}

üéØ **–ß—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ:**
1. –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä
2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ –∞–¥—Ä–µ—Å—É: <a href="{ADMIN_PANEL_URL}">–ê–¥—Ä–µ—Å –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏</a>
3. –í–æ–π–¥–∏—Ç–µ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
4. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–∞–Ω–µ–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–æ–π

‚ö†Ô∏è **–í–∞–∂–Ω–æ:** –ü–∞–Ω–µ–ª—å –∑–∞–ø—É—â–µ–Ω–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ. –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–∏—Å–ø–µ—Ç—á–µ—Ä –∑–∞–¥–∞—á –∏–ª–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ –∫–æ–º–ø—å—é—Ç–µ—Ä.

üîí **–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:** –°–º–µ–Ω–∏—Ç–µ –ø–∞—Ä–æ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤ —Ñ–∞–π–ª–µ .env
"""
                    await status_msg.edit_text(success_text.format(ADMIN_PANEL_URL=ADMIN_PANEL_URL), parse_mode="HTML")
                    logger.info(f"–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –∑–∞–ø—É—â–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {message.from_user.id}, PID: {process.pid}")
                else:
                    # –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π
                    error_text = f"""
‚ùå **–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏**

–ö–æ–¥ –≤–æ–∑–≤—Ä–∞—Ç–∞: {process.returncode}

**–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:**
‚Ä¢ –ü–æ—Ä—Ç 5000 —É–∂–µ –∑–∞–Ω—è—Ç
‚Ä¢ –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
‚Ä¢ –û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏

**–ü–æ–ø—Ä–æ–±—É–π—Ç–µ:**
1. –ó–∞–∫—Ä—ã—Ç—å –¥—Ä—É–≥–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ –ø–æ—Ä—Ç—É 5000
2. –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Ä—É—á–Ω—É—é: `python admin_panel.py`
3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏ –Ω–∞ –æ—à–∏–±–∫–∏

**–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫:**
‚Ä¢ Windows: `start_admin_panel.bat`
‚Ä¢ Linux/macOS: `./start_admin_panel.sh`
"""
                    await status_msg.edit_text(error_text, parse_mode="Markdown")
                    logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {message.from_user.id}, –∫–æ–¥: {process.returncode}")
                    
            except Exception as e:
                error_text = f"""
‚ùå **–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏**

–û—à–∏–±–∫–∞: {str(e)}

**–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã:**
1. –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫: `python admin_panel.py`
2. Windows: `start_admin_panel.bat`
3. Linux/macOS: `./start_admin_panel.sh`

**–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /admin –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π**
"""
                await status_msg.edit_text(error_text, parse_mode="Markdown")
                logger.error(f"–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏: {e}")
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /start_admin: {e}")
            await message.answer("üòî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã.")
    
    async def handle_stop_admin(self, message: Message):
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /stop_admin –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏.
        
        Args:
            message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        """
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            admin_ids = config.ADMIN_IDS if config.ADMIN_IDS else [123456789]
            
            # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} (@{message.from_user.username}) –∑–∞–ø—Ä–æ—Å–∏–ª /stop_admin")
            
            if message.from_user.id not in admin_ids:
                await message.answer(f"‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.\n\nüìù **–í–∞—à ID:** `{message.from_user.id}`\n\n–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –¥–æ–±–∞–≤—å—Ç–µ —Å–≤–æ–π ID –≤ —Ñ–∞–π–ª .env:\n```\nADMIN_IDS={message.from_user.id}\n```", parse_mode="Markdown")
                return
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–∏—Å–∫–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
            status_msg = await message.answer("üîç –ò—â—É –ø—Ä–æ—Ü–µ—Å—Å—ã –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏...")
            
            try:
                import subprocess
                import sys
                import os
                import psutil
                
                # –ò—â–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
                admin_processes = []
                for proc in psutil.process_iter(['pid', 'name', 'cmdline']):
                    try:
                        cmdline = proc.info['cmdline']
                        if cmdline and 'admin_panel.py' in ' '.join(cmdline):
                            admin_processes.append(proc)
                    except (psutil.NoSuchProcess, psutil.AccessDenied):
                        continue
                
                if not admin_processes:
                    await status_msg.edit_text("‚ÑπÔ∏è –ü—Ä–æ—Ü–µ—Å—Å—ã –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –í–æ–∑–º–æ–∂–Ω–æ, –ø–∞–Ω–µ–ª—å —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.")
                    return
                
                # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
                stopped_count = 0
                for proc in admin_processes:
                    try:
                        proc.terminate()  # –ú—è–≥–∫–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞
                        proc.wait(timeout=5)  # –ñ–¥–µ–º –¥–æ 5 —Å–µ–∫—É–Ω–¥
                        stopped_count += 1
                        logger.info(f"–ü—Ä–æ—Ü–µ—Å—Å –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ PID {proc.pid} –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
                    except psutil.TimeoutExpired:
                        # –ï—Å–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É–±–∏–≤–∞–µ–º
                        proc.kill()
                        stopped_count += 1
                        logger.info(f"–ü—Ä–æ—Ü–µ—Å—Å –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ PID {proc.pid} –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
                    except Exception as e:
                        logger.error(f"–û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞ {proc.pid}: {e}")
                
                if stopped_count > 0:
                    success_text = f"""
‚úÖ **–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!**

üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**
‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: {stopped_count}

üåê **–°—Ç–∞—Ç—É—Å:** <a href="{ADMIN_PANEL_URL}">–ê–¥—Ä–µ—Å –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏</a> –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω

**–î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:**
‚Ä¢ `/start_admin` - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫
‚Ä¢ `/admin` - –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ä—É—á–Ω–æ–º—É –∑–∞–ø—É—Å–∫—É
"""
                    await status_msg.edit_text(success_text.format(ADMIN_PANEL_URL=ADMIN_PANEL_URL), parse_mode="HTML")
                    logger.info(f"–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {message.from_user.id}, –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: {stopped_count}")
                else:
                    await status_msg.edit_text("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∏ –æ–¥–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞. –í–æ–∑–º–æ–∂–Ω–æ, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤.")
                    
            except ImportError:
                error_text = """
‚ùå **–û—à–∏–±–∫–∞: –º–æ–¥—É–ª—å psutil –Ω–µ –Ω–∞–π–¥–µ–Ω**

–î–ª—è —Ä–∞–±–æ—Ç—ã –∫–æ–º–∞–Ω–¥—ã /stop_admin —Ç—Ä–µ–±—É–µ—Ç—Å—è –º–æ–¥—É–ª—å psutil.

**–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ:**
```
pip install psutil
```

**–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∫–∏:**
‚Ä¢ –î–∏—Å–ø–µ—Ç—á–µ—Ä –∑–∞–¥–∞—á (Windows)
‚Ä¢ Activity Monitor (macOS)
‚Ä¢ htop/ps (Linux)
‚Ä¢ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å–∏—Å—Ç–µ–º—ã
"""
                await status_msg.edit_text(error_text, parse_mode="Markdown")
                
            except Exception as e:
                error_text = f"""
‚ùå **–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏**

–û—à–∏–±–∫–∞: {str(e)}

**–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∫–∏:**
‚Ä¢ –î–∏—Å–ø–µ—Ç—á–µ—Ä –∑–∞–¥–∞—á (Windows)
‚Ä¢ Activity Monitor (macOS) 
‚Ä¢ htop/ps (Linux)
‚Ä¢ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å–∏—Å—Ç–µ–º—ã
"""
                await status_msg.edit_text(error_text, parse_mode="Markdown")
                logger.error(f"–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏: {e}")
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /stop_admin: {e}")
            await message.answer("üòî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã.")
    
    async def handle_deprecated_start_admin(self, message: Message):
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start_admin —Å –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ–º.
        
        Args:
            message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        """
        deprecated_text = """
‚ÑπÔ∏è **–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞**

–í—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ `/start_admin`, –Ω–æ –æ—Å–Ω–æ–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞:
üëâ `/startadmin` (–±–µ–∑ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è)

–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—é –Ω–∞ –∑–∞–ø—É—Å–∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏...
"""
        try:
            await message.answer(deprecated_text, parse_mode="Markdown")
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É /start_admin, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ /startadmin")
            # –í—ã–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
            await self.handle_start_admin(message)
        except TelegramAPIError as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –∫–æ–º–∞–Ω–¥–µ: {e}")
    
    async def handle_deprecated_stop_admin(self, message: Message):
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /stop_admin —Å –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ–º.
        
        Args:
            message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        """
        deprecated_text = """
‚ÑπÔ∏è **–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞**

–í—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ `/stop_admin`, –Ω–æ –æ—Å–Ω–æ–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞:
üëâ `/stopadmin` (–±–µ–∑ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è)

–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—é –Ω–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫—É –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏...
"""
        try:
            await message.answer(deprecated_text, parse_mode="Markdown")
            logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –∫–æ–º–∞–Ω–¥—É /stop_admin, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ /stopadmin")
            # –í—ã–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
            await self.handle_stop_admin(message)
        except TelegramAPIError as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –∫–æ–º–∞–Ω–¥–µ: {e}")
    
    async def handle_question(self, message: Message):
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–æ–ø—Ä–æ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        
        Args:
            message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        """
        user_question = message.text
        user_id = message.from_user.id
        
        logger.info(f"–ü–æ–ª—É—á–µ–Ω –≤–æ–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {user_question[:100]}...")
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
        context_id = create_question_context(user_question, user_id)
        
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –≤–æ–ø—Ä–æ—Å —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–º
            is_legal, score, explanation = is_legal_question(user_question)
            
            if not is_legal:
                # –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –Ω–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–π, –æ—Ç–∫–ª–æ–Ω—è–µ–º –µ–≥–æ
                logger.info(f"‚ùå –§–ò–õ–¨–¢–†: –û—Ç–∫–ª–æ–Ω–µ–Ω –Ω–µ—é—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –≤–æ–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} "
                           f"(–æ—Ü–µ–Ω–∫–∞: {score:.3f}): {explanation}")
                
                # –§–∏–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
                finalize_question_context(context_id, accepted=False, ml_confidence=score, ml_explanation=explanation)
                
                rejection_message = get_rejection_message()
                await message.answer(rejection_message, parse_mode="Markdown")
                return
            
            # –õ–æ–≥–∏—Ä—É–µ–º –ø—Ä–∏–Ω—è—Ç–∏–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
            logger.info(f"‚úÖ –§–ò–õ–¨–¢–†: –ü—Ä–∏–Ω—è—Ç —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –≤–æ–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} "
                       f"(–æ—Ü–µ–Ω–∫–∞: {score:.3f}): {explanation}")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å
            processing_msg = await message.answer("üîç –ò—â—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –≤–∞—à–µ–º—É –≤–æ–ø—Ä–æ—Å—É...")
            
            # –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π
            relevant_docs = search_relevant_docs(user_question, n_results=config.MAX_RESULTS)
            
            # –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞
            if relevant_docs:
                logger.info(f"üìö –ò–°–¢–û–ß–ù–ò–ö: –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π - –Ω–∞–π–¥–µ–Ω–æ {len(relevant_docs)} –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
                # –§–æ—Ä–º–∏—Ä—É–µ–º —á–∏—Ç–∞–µ–º—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
                doc_titles = []
                for doc in relevant_docs[:3]:
                    metadata = doc.get('metadata', {})
                    title = metadata.get('title') or metadata.get('source_file') or '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'
                    # –£–±–∏—Ä–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ .pdf –¥–ª—è –∫—Ä–∞—Ç–∫–æ—Å—Ç–∏
                    if title.endswith('.pdf'):
                        title = title[:-4]
                    doc_titles.append(title[:50])
                logger.info(f"üìÑ –ü—Ä–∏–º–µ—Ä—ã –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {doc_titles}")
            else:
                logger.info(f"‚ùå –ò–°–¢–û–ß–ù–ò–ö: –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –ø—É—Å—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–∑ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π
            need_dynamic_search = False
            if not relevant_docs:
                # –ï—Å–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –≤—Å–µ–≥–¥–∞ –∏—â–µ–º –Ω–∞ pravo.by
                need_dynamic_search = True
                logger.info(f"üîç –†–ï–®–ï–ù–ò–ï: –î–æ–∫—É–º–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã - –≤—Å–µ–≥–¥–∞ –∏—â–µ–º –Ω–∞ pravo.by")
            else:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—á–µ—Å—Ç–≤–æ –ª—É—á—à–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
                best_distance = min(doc['distance'] for doc in relevant_docs)
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–æ–ª–µ–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π –ø–æ—Ä–æ–≥ –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞
                if best_distance > 0.5:  # –°–Ω–∏–∂–µ–Ω –ø–æ—Ä–æ–≥ —Å 0.6 –¥–æ 0.5
                    need_dynamic_search = True
                    logger.info(f"üîç –†–ï–®–ï–ù–ò–ï: –ù–∏–∑–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (–¥–∏—Å—Ç–∞–Ω—Ü–∏—è: {best_distance:.3f}) - –∏—â–µ–º –Ω–∞ pravo.by")
                else:
                    logger.info(f"üîç –†–ï–®–ï–ù–ò–ï: –•–æ—Ä–æ—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (–¥–∏—Å—Ç–∞–Ω—Ü–∏—è: {best_distance:.3f}) - –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑—É –∑–Ω–∞–Ω–∏–π")
            
            if need_dynamic_search:
                # –í—ã–ø–æ–ª–Ω—è–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ –Ω–∞ pravo.by
                await processing_msg.edit_text("üåê –ò—â—É –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –Ω–∞ pravo.by...")
                
                try:
                    # –°–æ–∑–¥–∞–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫–æ–≤–∏–∫
                    web_scraper = create_scraper_from_config()
                    knowledge_base = get_knowledge_base()
                    text_processor = TextProcessor()
                    scraping_tracker = get_scraping_tracker()
                    
                    dynamic_searcher = create_dynamic_searcher(
                        web_scraper, knowledge_base, text_processor, scraping_tracker
                    )
                    
                    # –í—ã–ø–æ–ª–Ω—è–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫
                    logger.info(f"üîç –ò–°–¢–û–ß–ù–ò–ö: –ó–∞–ø—É—Å–∫ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞ –Ω–∞ pravo.by –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
                    dynamic_answer, success = dynamic_searcher.search_and_add_to_knowledge_base(user_question)
                    
                    if success and dynamic_answer:
                        await processing_msg.edit_text(dynamic_answer)
                        logger.info(f"‚úÖ –ò–°–¢–û–ß–ù–ò–ö: –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ —É—Å–ø–µ—à–µ–Ω - –æ—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω —Å pravo.by –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
                        
                        # –§–∏–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —É—Å–ø–µ—à–Ω–æ–≥–æ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞
                        finalize_question_context(context_id, accepted=True, ml_confidence=score, ml_explanation=explanation,
                                                search_quality="high", answer_source="dynamic_search")
                        return
                    else:
                        # –ï—Å–ª–∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ –Ω–µ –ø–æ–º–æ–≥, –Ω–æ –≤ –±–∞–∑–µ –µ—Å—Ç—å —Ö–æ—Ç—å —á—Ç–æ-—Ç–æ
                        if relevant_docs:
                            await processing_msg.edit_text("üîç –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–∞ pravo.by –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ì–µ–Ω–µ—Ä–∏—Ä—É—é –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π...")
                            answer = get_answer(user_question, relevant_docs)
                            await processing_msg.edit_text(answer)
                            logger.info(f"‚úÖ –ò–°–¢–û–ß–ù–ò–ö: –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω –∏–∑ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π –ø–æ—Å–ª–µ –Ω–µ—É—Å–ø–µ—à–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –Ω–∞ pravo.by –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
                            
                            # –§–∏–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –∏–∑ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π –ø–æ—Å–ª–µ –Ω–µ—É—Å–ø–µ—à–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
                            search_quality = "medium" if min(doc['distance'] for doc in relevant_docs) <= 0.5 else "low"
                            finalize_question_context(context_id, accepted=True, ml_confidence=score, ml_explanation=explanation,
                                                    search_quality=search_quality, answer_source="knowledge_base_fallback")
                            return
                        else:
                            # –ï—Å–ª–∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ –Ω–µ –ø–æ–º–æ–≥ –∏ –≤ –±–∞–∑–µ –Ω–∏—á–µ–≥–æ –Ω–µ—Ç
                            no_info_response = """
üòî –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ –Ω–∞—à–µ–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –≤–∞—à–µ–º—É –≤–æ–ø—Ä–æ—Å—É –Ω–∏ –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π, –Ω–∏ –Ω–∞ pravo.by.

**–ü–æ–ø—Ä–æ–±—É–π—Ç–µ:**
‚Ä¢ –ü–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å –±–æ–ª–µ–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ
‚Ä¢ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –ø–æ –¥—Ä—É–≥–æ–π —Ç–µ–º–µ –ø—Ä–∞–≤–∞
‚Ä¢ –£—Ç–æ—á–Ω–∏—Ç—å —Å—Ñ–µ—Ä—É –ø—Ä–∞–≤–∞ (—Ç—Ä—É–¥–æ–≤–æ–µ, –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–µ, —Å–µ–º–µ–π–Ω–æ–µ –∏ —Ç.–¥.)

**–ü—Ä–∏–º–µ—Ä:** –≤–º–µ—Å—Ç–æ "–ß—Ç–æ –¥–µ–ª–∞—Ç—å?" —Å–ø—Ä–æ—Å–∏—Ç–µ "–ß—Ç–æ –¥–µ–ª–∞—Ç—å –ø—Ä–∏ —É–≤–æ–ª—å–Ω–µ–Ω–∏–∏ –≤ –†–ë?"

üîÑ **–•–æ—Ä–æ—à–∞—è –Ω–æ–≤–æ—Å—Ç—å:** –Ø –ø–æ–ø—ã—Ç–∞–ª—Å—è –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –Ω–∞ pravo.by –∏ –ø–æ–ø–æ–ª–Ω–∏–ª —Å–≤–æ—é –±–∞–∑—É –∑–Ω–∞–Ω–∏–π. –í–æ–∑–º–æ–∂–Ω–æ, —Å–ª–µ–¥—É—é—â–∏–π –ø–æ—Ö–æ–∂–∏–π –≤–æ–ø—Ä–æ—Å —è —Å–º–æ–≥—É —Ä–µ—à–∏—Ç—å!

–ò–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É —é—Ä–∏—Å—Ç—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏.
"""
                            await processing_msg.edit_text(no_info_response, parse_mode="Markdown")
                            
                            # –§–∏–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —Å–ª—É—á–∞—è, –∫–æ–≥–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
                            finalize_question_context(context_id, accepted=True, ml_confidence=score, ml_explanation=explanation,
                                                    search_quality="none", answer_source="no_answer")
                            return
                        
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞: {e}")
                    
                    # –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –Ω–æ –≤ –±–∞–∑–µ –µ—Å—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã - –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö
                    if relevant_docs:
                        await processing_msg.edit_text("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –Ω–∞ pravo.by. –ì–µ–Ω–µ—Ä–∏—Ä—É—é –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π...")
                        answer = get_answer(user_question, relevant_docs)
                        await processing_msg.edit_text(answer)
                        logger.info(f"‚úÖ –ò–°–¢–û–ß–ù–ò–ö: –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω –∏–∑ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏ –ø–æ–∏—Å–∫–∞ –Ω–∞ pravo.by –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
                        
                        # –§–∏–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –∏–∑ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏ –ø–æ–∏—Å–∫–∞
                        search_quality = "medium" if min(doc['distance'] for doc in relevant_docs) <= 0.5 else "low"
                        finalize_question_context(context_id, accepted=True, ml_confidence=score, ml_explanation=explanation,
                                                search_quality=search_quality, answer_source="knowledge_base_error")
                        return
                    else:
                        # –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –∏ –≤ –±–∞–∑–µ –Ω–∏—á–µ–≥–æ –Ω–µ—Ç
                        no_info_response = """
üòî –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.

**–ü–æ–ø—Ä–æ–±—É–π—Ç–µ:**
‚Ä¢ –ü–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å
‚Ä¢ –ó–∞–¥–∞—Ç—å –±–æ–ª–µ–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –≤–æ–ø—Ä–æ—Å
‚Ä¢ –£—Ç–æ—á–Ω–∏—Ç—å —Å—Ñ–µ—Ä—É –ø—Ä–∞–≤–∞

**–ü—Ä–∏–º–µ—Ä:** –≤–º–µ—Å—Ç–æ "–ß—Ç–æ –¥–µ–ª–∞—Ç—å?" —Å–ø—Ä–æ—Å–∏—Ç–µ "–ß—Ç–æ –¥–µ–ª–∞—Ç—å –ø—Ä–∏ —É–≤–æ–ª—å–Ω–µ–Ω–∏–∏?"

–ò–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É —é—Ä–∏—Å—Ç—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏.
"""
                        await processing_msg.edit_text(no_info_response, parse_mode="Markdown")
                        
                        # –§–∏–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —Å–ª—É—á–∞—è –æ—à–∏–±–∫–∏ –±–µ–∑ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π
                        finalize_question_context(context_id, accepted=True, ml_confidence=score, ml_explanation=explanation,
                                                search_quality="error", answer_source="error")
                        return
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç —Å –ø–æ–º–æ—â—å—é LLM
            logger.info(f"ü§ñ –ò–°–¢–û–ß–ù–ò–ö: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ —á–µ—Ä–µ–∑ OpenAI –Ω–∞ –æ—Å–Ω–æ–≤–µ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
            answer = get_answer(user_question, relevant_docs)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (–±–µ–∑ Markdown —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–æ–∫ –ø–∞—Ä—Å–∏–Ω–≥–∞)
            await processing_msg.edit_text(answer)
            
            logger.info(f"‚úÖ –ò–°–¢–û–ß–ù–ò–ö: –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id} - OpenAI + –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π")
            
            # –§–∏–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –ø—Ä–∏–Ω—è—Ç–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
            search_quality = "high" if relevant_docs and min(doc['distance'] for doc in relevant_docs) <= 0.5 else "medium"
            finalize_question_context(context_id, accepted=True, ml_confidence=score, ml_explanation=explanation, 
                                    search_quality=search_quality, answer_source="knowledge_base")
            
        except TelegramAPIError as e:
            logger.error(f"–û—à–∏–±–∫–∞ Telegram API: {e}")
            # –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            try:
                answer = get_answer(user_question, relevant_docs)
                await message.answer(answer)
                
                # –§–∏–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —Å–ª—É—á–∞—è –æ—à–∏–±–∫–∏ Telegram API —Å –æ—Ç–≤–µ—Ç–æ–º
                search_quality = "medium" if relevant_docs and min(doc['distance'] for doc in relevant_docs) <= 0.5 else "low"
                finalize_question_context(context_id, accepted=True, ml_confidence=score, ml_explanation=explanation,
                                        search_quality=search_quality, answer_source="telegram_api_error")
            except:
                await message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–≤–µ—Ç–∞.")
                
                # –§–∏–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–∏
                finalize_question_context(context_id, accepted=True, ml_confidence=score, ml_explanation=explanation,
                                        search_quality="error", answer_source="critical_error")
        except Exception as e:
            logger.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–æ–ø—Ä–æ—Å–∞: {e}")
            error_response = """
üòî –ü—Ä–æ–∏–∑–æ—à–ª–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ:
‚Ä¢ –ü–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å
‚Ä¢ –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –ø–æ–∑–∂–µ
‚Ä¢ –û–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É

–ü—Ä–∏–Ω–æ—Å–∏–º –∏–∑–≤–∏–Ω–µ–Ω–∏—è –∑–∞ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞!
"""
            await message.answer(error_response)
            
            # –§–∏–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–π –æ—à–∏–±–∫–∏
            try:
                finalize_question_context(context_id, accepted=True, ml_confidence=score, ml_explanation=explanation,
                                        search_quality="error", answer_source="unexpected_error")
            except:
                # –ï—Å–ª–∏ –¥–∞–∂–µ —Ñ–∏–Ω–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º
                logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–∏–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏")
    
    async def start_polling(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ polling."""
        try:
            logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ polling...")
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
            await self._setup_bot_commands()
            await self.dp.start_polling(self.bot)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ polling: {e}")
            raise
    
    async def stop(self):
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –±–æ—Ç–∞."""
        await self.bot.session.close()
        logger.info("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
_bot_instance = None

def get_bot() -> LegalBot:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞."""
    global _bot_instance
    if _bot_instance is None:
        _bot_instance = LegalBot()
    return _bot_instance

def start_bot():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞."""
    import asyncio
    
    bot = get_bot()
    
    try:
        asyncio.run(bot.start_polling())
    except KeyboardInterrupt:
        logger.info("–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        raise
    finally:
        logger.info("–ë–æ—Ç –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É") 